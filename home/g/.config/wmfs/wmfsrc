#
# WMFS2 configuration file
#

# Possible file inclusion:
# @include "file"

# Multi theme section
[themes]
	[theme]
		# Seperate theme for borderless windows
		name = "borderless"

		font = "-adobe-helvetica-medium-r-*-*-10-*-*-*-*-*-*-*"

		# Bars
		bars_width = 0
		bars_fg = "#000000"
		bars_bg = "#000000"

		# Element tags
		tags_normal_fg = "#000000"
		tags_normal_bg = "#000000"
		# tags_normal_statusline = ""

		tags_sel_fg		= "#000000"
		tags_sel_bg		= "#000000"
		# tags_sel_statusline = ""

		tags_occupied_fg = "#000000"
		tags_occupied_bg = "#000000"
		tags_occupied_statusline = "\R[0;0;100;1;#000000]"

		tags_urgent_fg		 = "#000000"
		tags_urgent_bg		 = "#000000"
		# tags_urgent_statusline = ""

		tags_border_color = "#000000"
		tags_border_width = 0

		# Frame / Client
		client_normal_fg = "#000000"
		client_normal_bg = "#000000"
		client_normal_statusline = "\s[3;9;#000000;x] \s[2;8;#000000;x](1;client_close)"

		client_sel_fg = "#000000"
		client_sel_bg = "#000000"
		client_sel_statusline = "\s[3;9;#000000;x] \s[2;8;#000000;x](1;client_close)"

		# client_free_statusline = ""

		frame_bg = "#000000"
		client_titlebar_width = 0
		client_border_width = 0
	[/theme]

	[theme]
		# No name mean default
		#name = "HighContrast"

		font = "-adobe-helvetica-medium-r-*-*-10-*-*-*-*-*-*-*"
		#font = "Fixed"

		# Bars
		bars_width = 15
		bars_fg = "#BBBBBB"
		bars_bg = "#000000"

		# Element tags
		tags_normal_fg = "#BBBBBB"
		tags_normal_bg = "#000000"
		# tags_normal_statusline = ""

		tags_sel_fg		= "#000000"
		tags_sel_bg		= "#999999"
		# tags_sel_statusline = ""

		tags_occupied_fg = "#BBBBBB"
		tags_occupied_bg = "#222222"
		tags_occupied_statusline = "\R[0;0;100;1;#AABBAA]"

		tags_urgent_fg		 = "#222222"
		tags_urgent_bg		 = "#CC4444"
		# tags_urgent_statusline = ""

		tags_border_color = "#333333"
		tags_border_width = 1

		# Frame / Client
		client_normal_fg = "#AAAAAA"
		client_normal_bg = "#111111"
		client_normal_statusline = "\s[3;9;#121212;x] \s[2;8;#ff0000;x](1;client_close)"

		client_sel_fg = "#000000"
		client_sel_bg = "#555555"
		client_sel_statusline = "\s[3;9;#121212;x] \s[2;8;#ff0000;x](1;client_close)"

		# client_free_statusline = ""

		frame_bg = "#000000"
		client_titlebar_width = 10
		client_border_width = 0
	[/theme]

	#[theme]
		## No name mean default
		## name = "default"

		#font = "-adobe-helvetica-medium-r-*-*-10-*-*-*-*-*-*-*"
		##font = "Fixed"

		## Bars
		#bars_width = 14
		#bars_fg = "#AABBAA"
		#bars_bg = "#223322"

		## Element tags
		#tags_normal_fg = "#AABBAA"
		#tags_normal_bg = "#223322"
		## tags_normal_statusline = ""

		#tags_sel_fg		= "#223322"
		#tags_sel_bg		= "#AABBAA"
		## tags_sel_statusline = ""

		#tags_occupied_fg = "#AABBAA"
		#tags_occupied_bg = "#445544"
		#tags_occupied_statusline = "\R[0;0;100;1;#AABBAA]"

		#tags_urgent_fg		 = "#223322"
		#tags_urgent_bg		 = "#CC5544"
		## tags_urgent_statusline = ""

		#tags_border_color = "#112211"
		#tags_border_width = 1

		## Frame / Client
		#client_normal_fg = "#AABBAA"
		#client_normal_bg = "#223322"
		#client_normal_statusline = "\s[3;9;#121212;x] \s[2;8;#ff0000;x](1;client_close)"

		#client_sel_fg = "#223322"
		#client_sel_bg = "#AABBAA"
		#client_sel_statusline = "\s[3;9;#121212;x] \s[2;8;#ff0000;x](1;client_close)"

		## client_free_statusline = ""

		#frame_bg = "#555555"
		#client_titlebar_width = 10
		#client_border_width = 0
	#[/theme]
[/themes]

[bars]
	# Position:
	#
	# 0  Top
	# 1  Bottom
	# 2  Hide

	# Element type:
	#
	# t  Tags
	# s  Statustext (will take available space)
	# y  Systray (can be set only ONE time among all element)
	# l  Launcher (will be expended at launcher use)
	[bar]
		name="status"
		position = 1
		screen = 0
		elements = "tlsy"	 # element order in bar
		theme = "default"
	[/bar]

# [bar]
#		 position = 0
#		 screen = 1
#		 elements = "ts"
#		 theme = "default"
# [/bar]
[/bars]

[tags]
	# Tag wrapping navigation
	circular = true

	# Use no screen option or screen = -1 to set tag on each screen
	[tag]
		screen = -1
		name = "S"
		#statusline="GG"
	[/tag]
	[tag] name = "1" [/tag]
	[tag] name = "2" [/tag]
	[tag] name = "3" [/tag]
	[tag] name = "4" [/tag]
	#[tag] name = "6" [/tag]
	#[tag] name = "7" [/tag]

	# Mousebinds associated to Tags element button
	[mouse] button = "1" func = "tag_click" [/mouse]
	[mouse] button = "4" func = "tag_next"	[/mouse]
	[mouse] button = "5" func = "tag_prev"	[/mouse]
[/tags]

[client]
	# Padding between clients (default: 0) :
	#padding = 75

	# Give focus to new created client (default = false)
	autofocus = true

	theme = "default"
	key_modifier = "Super"

	# Focus type:
	#  enter : focus follow mouse (default)
	#  click : click to focus
	#  everything-else : disable mouse focus support
	focus = click

	[mouse] button = "1" func = "client_focus_click" [/mouse]
	[mouse] button = "1" func = "mouse_swap" [/mouse]
	[mouse] button = "2" func = "mouse_tab"	[/mouse]
	[mouse] button = "3" func = "mouse_resize" [/mouse]
	[mouse] button = "4" func = "client_focus_next_tab" [/mouse]
	[mouse] button = "5" func = "client_focus_prev_tab" [/mouse]
[/client]

[rules]
	[rule]
		# use instance = "*" for a all-clients rule
		instance = "chromium"
		# role = ""
		# name = ""
		theme = "borderless"

		tag = 0
		screen = 0

		free = false
		tab = false
		ignore_tag = false
	[/rule]
	[rule]
		# use instance = "*" for a all-clients rule
		instance = "st-256color"
		# role = ""
		# name = ""
		theme = "borderless"

		free = false
		tab = false
		ignore_tag = false
	[/rule]
[/rules]

[launchers]
	# command can be an uicb function or an uicb function + extension (see example)
	# Example of uicb + ext:
	#		command = "spawn xterm -e"
	[launcher]
		name = "exec"
		prompt = "Command: "
		command = "spawn"
		width = 1366
	[/launcher]

	[launcher]
		name = "edit"
		prompt = "edit: "
		command = "spawn st -f 'Inconsolata:size=12' -e vim"
		width = 1366
	[/launcher]
[/launchers]

[keys]
	# Spawners
	[key] mod = {"Super"} key = "Return" func = "spawn" cmd = "stf" [/key]
	[key] mod = {"Super"} key = "w" func = "spawn" cmd = "c" [/key]
	[key] mod = {"Super"} key = "v" func = "spawn" cmd = "vimg" [/key]
	[key] mod = {"Super"} key = "e" func = "spawn" cmd = "thunar" [/key]

	[key] mod = {"Control", "Alt"} key = "q" func = "quit" [/key]
	[key] mod = {"Control", "Alt"} key = "r" func = "reload" [/key]
	[key] mod = {"Control", "Alt"} key = "g" func = "spawn" cmd = "vimg ~/.config/wmfs/wmfsrc" [/key]
	[key] mod = {"Control", "Alt"} key = "l" func = "exec" cmd = "exec i3lock -c000000" [/key]

	# Tag manipulation
	[key] mod = {"Super"} key = "s" func = "tag_set" cmd = "0" [/key]
	[key] mod = {"Super"} key = "1" func = "tag_set" cmd = "1" [/key]
	[key] mod = {"Super"} key = "2" func = "tag_set" cmd = "2" [/key]
	[key] mod = {"Super"} key = "3" func = "tag_set" cmd = "3" [/key]
	[key] mod = {"Super"} key = "4" func = "tag_set" cmd = "4" [/key]
	#[key] mod = {"Super"} key = "6" func = "tag_set" cmd = "5" [/key]
	#[key] mod = {"Super"} key = "7" func = "tag_set" cmd = "6" [/key]
	#[key] mod = {"Super"} key = "8" func = "tag_set" cmd = "7" [/key]

	[key] mod = {"Super", "Shift"} key = "s" func = "tag_client" cmd = "0" [/key]
	[key] mod = {"Super", "Shift"} key = "1" func = "tag_client" cmd = "1" [/key]
	[key] mod = {"Super", "Shift"} key = "2" func = "tag_client" cmd = "2" [/key]
	[key] mod = {"Super", "Shift"} key = "3" func = "tag_client" cmd = "3" [/key]
	[key] mod = {"Super", "Shift"} key = "4" func = "tag_client" cmd = "4" [/key]
	#[key] mod = {"Super", "Shift"} key = "6" func = "tag_client" cmd = "5" [/key]
	#[key] mod = {"Super", "Shift"} key = "7" func = "tag_client" cmd = "6" [/key]
	#[key] mod = {"Super", "Shift"} key = "8" func = "tag_client" cmd = "7" [/key]

	[key] mod = {"Super"} key = "minus" func = "tag_del" [/key]
	[key] mod = {"Super", "Shift"} key = "minus" func = "tag_new" [/key]

	# tag function: cmd = nameofthetag
	#[key] mod = {"Super"} key = "z" func = "tag" cmd = "2" [/key]

	#[key] mod = {"Control"} key = "Right" func = "tag_next" [/key]
	#[key] mod = {"Control"} key = "Left" func = "tag_prev" [/key]

	#[key] mod = {"Control"} key = "Up" func = "screen_next" [/key]
	#[key] mod = {"Control"} key = "Down" func = "screen_prev" [/key]

	[key] mod = {"Super"} key = "q" func = "client_close" [/key]

	# Focus next / prev client and next / prev tabbed client
	[key] mod = { "Alt" } key = "Tab" func = "client_focus_next" [/key]
	[key] mod = { "Alt", "Shift" } key = "Tab" func = "client_focus_prev" [/key]
	[key] mod = { "Super" }	key = "Tab" func = "client_focus_next_tab" [/key]
	[key] mod = { "Super", "Shift" } key = "Tab" func = "client_focus_prev_tab" [/key]

	# Focus next client with direction
	[key] mod = {"Alt"} key = "h" func = "client_focus_left"	 [/key]
	[key] mod = {"Alt"} key = "l" func = "client_focus_right"  [/key]
	[key] mod = {"Alt"} key = "k" func = "client_focus_top"		 [/key]
	[key] mod = {"Alt"} key = "j" func = "client_focus_bottom" [/key]

	# swap next client with direction:
	[key] mod = {"Control", "Shift"} key = "h" func = "client_swap_left"	 [/key]
	[key] mod = {"Control", "Shift"} key = "l" func = "client_swap_right"  [/key]
	[key] mod = {"Control", "Shift"} key = "k" func = "client_swap_top"		 [/key]
	[key] mod = {"Control", "Shift"} key = "j" func = "client_swap_bottom" [/key]

	# Resize selected tiled client with direction
	#[key] mod = {"Super", "Shift"} key = "i" func = "client_resize_left"	 cmd = "20"  [/key]
	#[key] mod = {"Super", "Shift"} key = "i" func = "client_resize_right"	 cmd = "20"  [/key]
	#[key] mod = {"Super", "Shift"} key = "i" func = "client_resize_top"	 cmd = "20"  [/key]
	#[key] mod = {"Super", "Shift"} key = "i" func = "client_resize_bottom"	 cmd = "20"  [/key]
	#[key] mod = {"Super", "Control"} key = "h" func = "client_resize_left"		cmd = "20" [/key]
	#[key] mod = {"Super", "Control"} key = "l" func = "client_resize_left"		cmd = "-20" [/key]
	#[key] mod = {"Super", "Control"} key = "k" func = "client_resize_top"		cmd = "20" [/key]
	#[key] mod = {"Super", "Control"} key = "j" func = "client_resize_top"		cmd = "-20" [/key]
	#[key] mod = {"Alt", "Super"} key = "h" func = "client_resize_right"	cmd = "-20" [/key]
	#[key] mod = {"Alt", "Super"} key = "l" func = "client_resize_right"	cmd = "20" [/key]
	#[key] mod = {"Alt", "Super"} key = "k" func = "client_resize_bottom" cmd = "-20" [/key]
	#[key] mod = {"Alt", "Super"} key = "j" func = "client_resize_bottom" cmd = "20" [/key]

	# Tabbing command
	[key] mod = {"Alt", "Shift"} key = "h" func = "client_tab_left" [/key]
	[key] mod = {"Alt", "Shift"} key = "l" func = "client_tab_right" [/key]
	[key] mod = {"Alt", "Shift"} key = "k" func = "client_tab_top" [/key]
	[key] mod = {"Alt", "Shift"} key = "j" func = "client_tab_bottom" [/key]
	[key] mod = {"Alt", "Shift"} key = "u" func = "client_untab" [/key]
	[key] mod = {"Super"} key = "t" func = "client_tab_next_opened" [/key]

	# Layout manipulation
	[key] mod = {"Super"} key = "m" func = "layout_vmirror" [/key]
	[key] mod = {"Super", "Shift"} key = "m" func = "layout_hmirror" [/key]
	[key] mod = {"Super"} key = "r" func = "layout_rotate_right" [/key]
	[key] mod = {"Super", "Shift"} key = "r" func = "layout_rotate_left" [/key]

	[key] mod = {"Control", "Super", "Alt"} key = "h" func = "layout_integrate_left" [/key]
	[key] mod = {"Control", "Super", "Alt"} key = "j" func = "layout_integrate_bottom" [/key]
	[key] mod = {"Control", "Super", "Alt"} key = "k" func = "layout_integrate_top" [/key]
	[key] mod = {"Control", "Super", "Alt"} key = "l" func = "layout_integrate_right" [/key]

	# Layout set historic travelling function (TESTING)
	[key] mod = {"Super"} key = "o" func = "layout_prev_set" [/key]
	[key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]

	# Toggle client free/tile
	[key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]

	# Toggle client ignore_tag
	#[key] mod = {"Super", "Shift"} key = "f" func = "client_toggle_ignore_tag" [/key]

	# Toggle infobar visibility
	[key] mod = {"Super", "Shift"} key = "h" func = "infobar_toggle_hide" cmd = "default" [/key]

	# Launcher
	[key] mod = {"Control", "Alt"} key = "x" func = "launcher" cmd = "exec" [/key]
	[key] mod = {"Control", "Alt"} key = "e" func = "launcher" cmd = "edit" [/key]
[/keys]
